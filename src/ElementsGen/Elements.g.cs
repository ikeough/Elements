//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.0.21.0 (Newtonsoft.Json v9.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------

namespace Hypar.Elements
{
    #pragma warning disable // Disable all warnings

    /// <summary>A property with a numeric value. Property values are assumed to be SI.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.21.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class NumericProperty 
    {
        [Newtonsoft.Json.JsonProperty("valueType", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public NumericPropertyValueType ValueType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        public double Value { get; set; }
    
    
    }
    
    /// <summary>A property with a string value.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.21.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class StringProperty 
    {
        [Newtonsoft.Json.JsonProperty("valueType", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public StringPropertyValueType ValueType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Value { get; set; }
    
    
    }
    
    /// <summary>A vector.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.21.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Vector 
    {
        [Newtonsoft.Json.JsonProperty("coordinates", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(2)]
        [System.ComponentModel.DataAnnotations.MaxLength(3)]
        public System.Collections.Generic.ICollection<double> Coordinates { get; set; } = new System.Collections.ObjectModel.Collection<double>();
    
    
    }
    
    /// <summary>A polygon.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.21.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Polygon 
    {
        [Newtonsoft.Json.JsonProperty("vertices", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(6)]
        public System.Collections.Generic.ICollection<double> Vertices { get; set; } = new System.Collections.ObjectModel.Collection<double>();
    
    
    }
    
    /// <summary>A line.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.21.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Line 
    {
        [Newtonsoft.Json.JsonProperty("vertices", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(6)]
        [System.ComponentModel.DataAnnotations.MaxLength(6)]
        public System.Collections.Generic.ICollection<double> Vertices { get; set; } = new System.Collections.ObjectModel.Collection<double>();
    
    
    }
    
    /// <summary>A profile defined by a perimeter and zero or more holes.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.21.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Profile 
    {
        [Newtonsoft.Json.JsonProperty("perimeter", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Polygon Perimeter { get; set; } = new Polygon();
    
        [Newtonsoft.Json.JsonProperty("voids", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Polygon> Voids { get; set; }
    
    
    }
    
    /// <summary>A color described as red, green, blue, and alpha components (RGBA).</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.21.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Color 
    {
        [Newtonsoft.Json.JsonProperty("components", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(4)]
        [System.ComponentModel.DataAnnotations.MaxLength(4)]
        public System.Collections.Generic.ICollection<double> Components { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    /// <summary>A material described using the physically based rendering (PBR) method.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.21.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Material 
    {
        /// <summary>The name of the material.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("baseColorFactor", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Color BaseColorFactor { get; set; } = new Color();
    
        [Newtonsoft.Json.JsonProperty("metallicFactor", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, 1)]
        public double MetallicFactor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("roughnessFactor", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, 1)]
        public double RoughnessFactor { get; set; }
    
    
    }
    
    /// <summary>A set of properties.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.21.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class PropertySet : System.Collections.Generic.Dictionary<string, object>
    {
    
    }
    
    /// <summary>A sweep defined by a profile and a path.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.21.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Sweep 
    {
        [Newtonsoft.Json.JsonProperty("profile", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Polygon Profile { get; set; } = new Polygon();
    
        [Newtonsoft.Json.JsonProperty("path", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Line Path { get; set; }
    
    
    }
    
    /// <summary>An extrusion defined by a profile and a depth.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.21.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Extrude 
    {
        [Newtonsoft.Json.JsonProperty("profile", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Profile Profile { get; set; } = new Profile();
    
        [Newtonsoft.Json.JsonProperty("direction", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Vector Direction { get; set; } = new Vector();
    
        [Newtonsoft.Json.JsonProperty("depth", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
        public double Depth { get; set; }
    
    
    }
    
    /// <summary>A coordinate system defined by a column-ordered 4x4 matrix.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.21.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Transform 
    {
        [Newtonsoft.Json.JsonProperty("matrix", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(16)]
        [System.ComponentModel.DataAnnotations.MaxLength(16)]
        public System.Collections.Generic.ICollection<double> Matrix { get; set; } = new System.Collections.ObjectModel.Collection<double>();
    
    
    }
    
    /// <summary>The base type for all elements.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.21.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Element 
    {
        [Newtonsoft.Json.JsonProperty("$schema", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Schema { get; set; }
    
        /// <summary>The unique identifier of the element.</summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }
    
        /// <summary>A human readable name for the element.</summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }
    
        /// <summary>A collection of components which define the element.</summary>
        [Newtonsoft.Json.JsonProperty("components", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, object> Components { get; set; } = new System.Collections.Generic.Dictionary<string, object>();
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.21.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum NumericPropertyValueType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"length")]
        Length = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"angle")]
        Angle = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"temperature")]
        Temperature = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"mass")]
        Mass = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"force")]
        Force = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"time")]
        Time = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = @"double")]
        Double = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = @"integer")]
        Integer = 7,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.0.21.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum StringPropertyValueType
    {
        [System.Runtime.Serialization.EnumMember(Value = @"date")]
        Date = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"text")]
        Text = 1,
    
    }
}